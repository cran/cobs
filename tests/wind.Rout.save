
R version 2.11.1 Patched (2010-08-09 r52698)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> suppressMessages(library(cobs))
> 
> source(system.file("util.R", package = "cobs"))
> 
> data(DublinWind)
> attach(DublinWind)##-> speed & day (instead of "wind.x" & "DUB.")
> iday <- sort.list(day)
> 
> if(!interactive()) postscript("wind.ps", horizontal = TRUE)
> 
> stopifnot(identical(day,c(rep(c(rep(1:365,3),1:366),4),
+                           rep(1:365,2))))
> co50.1 <- cobs(day, speed, constraint= "periodic", tau= .5, lambda= 2.2,
+                degree = 1)
> co50.2 <- cobs(day, speed, constraint= "periodic", tau= .5, lambda= 2.2,
+                degree = 2)
> 
> plot(day,speed)
> lines(day[iday], fitted(co50.1)[iday], col="orange", lwd = 2)
> lines(day[iday], fitted(co50.2)[iday], col="light blue", lwd = 2)
> rug(knots(co50.1), col=3)
> 
> nknots <- 13
> ## Compute the quadratic median smoothing B-spline using SIC
> ## lambda selection
> co.o50 <-
+  cobs(day, speed, knots.add = TRUE, constraint="periodic", nknots = nknots,
+       tau = .5, lambda = -1, factor = 3, method = "uniform")

 Searching for optimal lambda. This may take a while.
   While you are waiting, here is something you can consider
   to speed up the process:
       (a) Use a smaller number of knots;
       (b) Set lambda==0 to exclude the penalty term;
       (c) Use a coarser grid by reducing the argument
 	   'lambda.length' from the default value of 25.

   The algorithm has converged.  You might
   plot() the returned object (which plots 'sic' against 'lambda')
   to see if you have found the global minimum of the information criterion
   so that you can determine if you need to adjust any or all of
   'lambda.lo', 'lambda.hi' and 'lambda.length' and refit the model.

Warning message:
In cobs(day, speed, knots.add = TRUE, constraint = "periodic", nknots = nknots,  :
  The use of argument 'factor' is deprecated.
  It is now unused and will be removed in the future.
> summary(co.o50)
COBS smoothing spline (degree = 2) from call:
	 cobs(x = day, y = speed, constraint = "periodic", nknots = nknots,     method = "uniform", tau = 0.5, lambda = -1, knots.add = TRUE,     factor = 3)
{tau=0.5}-quantile;  dimensionality of fit: 7 from {16,14,12,13,9,8,7,30}
x$knots[1:13]:   0.999635,  31.416667,  61.833333, ... , 366.000365
lambda = 386959.9, selected via SIC, out of 25 ones.
coef[1:15]: 1.110119e+01, 1.125520e+01, 1.112968e+01, 1.057061e+01, 9.577983e+00, ... , 4.686141e-04
R^2 = 8.16% ;  empirical tau (over all): 3287/6574 = 0.5 (target tau= 0.5)
> 
> op <- par(mfrow = c(3,1), mgp = c(1.5, 0.6,0), mar=.1 + c(3,3:1))
> with(co.o50, plot(pp.sic ~ pp.lambda, type ="o",
+                   col=2, log = "x", main = "co.o50: periodic"))
> with(co.o50, plot(pp.sic ~ pp.lambda, type ="o", ylim = robrng(pp.sic),
+                   col=2, log = "x", main = "co.o50: periodic"))
> of <- 0.64430538125795
> with(co.o50, plot(pp.sic - of ~ pp.lambda, type ="o", ylim = c(6e-15, 8e-15),
+                   ylab = paste("sic -",formatC(of, dig=14, small.m = "'")),
+                   col=2, log = "x", main = "co.o50: periodic"))
> par(op)
> 
> ## cobs99: Since SIC chooses a lambda that corresponds to the smoothest
> ## possible fit, rerun cobs with a larger lstart value
> ## (lstart <- log(.Machine$double.xmax)^3) # 3.57 e9
> ##
> co.o50. <-
+     cobs(day,speed,knots.add = TRUE, constraint = "periodic", nknots = 10,
+          tau = .5,lambda = -1, method = "quantile")

 Searching for optimal lambda. This may take a while.
   While you are waiting, here is something you can consider
   to speed up the process:
       (a) Use a smaller number of knots;
       (b) Set lambda==0 to exclude the penalty term;
       (c) Use a coarser grid by reducing the argument
 	   'lambda.length' from the default value of 25.

   The algorithm has converged.  You might
   plot() the returned object (which plots 'sic' against 'lambda')
   to see if you have found the global minimum of the information criterion
   so that you can determine if you need to adjust any or all of
   'lambda.lo', 'lambda.hi' and 'lambda.length' and refit the model.

> summary(co.o50.)
COBS smoothing spline (degree = 2) from call:
	 cobs(x = day, y = speed, constraint = "periodic", nknots = 10,     method = "quantile", tau = 0.5, lambda = -1, knots.add = TRUE)
{tau=0.5}-quantile;  dimensionality of fit: 7 from {14,13,11,8,7,30}
x$knots[1:10]:   0.999635,  41.000000,  82.000000, ... , 366.000365
lambda = 101002.6, selected via SIC, out of 25 ones.
coef[1:12]: 1.121550e+01, 1.139573e+01, 1.089025e+01, 9.954427e+00, 8.148158e+00, ... , 5.373106e-04
R^2 = 8.22% ;  empirical tau (over all): 3287/6574 = 0.5 (target tau= 0.5)
> (pc.5 <- predict(co.o50., interval = "both"))
                 z       fit     cb.lo     cb.up     ci.lo     ci.up
  [1,]   0.9996351 11.215499  9.125242 13.305757 10.122990 12.308009
  [2,]   4.6865112 11.245072  9.654710 12.835435 10.413842 12.076303
  [3,]   8.3733872 11.267342 10.045325 12.489359 10.628634 11.906050
  [4,]  12.0602633 11.282307 10.274659 12.289955 10.755643 11.808972
  [5,]  15.7471394 11.289969 10.347360 12.232578 10.797299 11.782640
  [6,]  19.4340154 11.290328 10.318123 12.262532 10.782188 11.798467
  [7,]  23.1208915 11.283382 10.255295 12.311469 10.746035 11.820730
  [8,]  26.8077675 11.269133 10.203926 12.334340 10.712384 11.825882
  [9,]  30.4946436 11.247580 10.185358 12.309802 10.692391 11.802769
 [10,]  34.1815196 11.218724 10.205240 12.232207 10.689009 11.748438
 [11,]  37.8683957 11.182563 10.255409 12.109717 10.697970 11.667156
 [12,]  41.5552718 11.139142 10.305981 11.972303 10.703676 11.574608
 [13,]  45.2421478 11.090835 10.292696 11.888974 10.673674 11.507996
 [14,]  48.9290239 11.039004 10.218341 11.859667 10.610070 11.467938
 [15,]  52.6158999 10.983650 10.115914 11.851387 10.530113 11.437188
 [16,]  56.3027760 10.924774 10.010391 11.839157 10.446856 11.402692
 [17,]  59.9896521 10.862375  9.916478 11.808272 10.367986 11.356764
 [18,]  63.6765281 10.796453  9.841522 11.751383 10.297342 11.295564
 [19,]  67.3634042 10.727008  9.787927 11.666088 10.236181 11.217834
 [20,]  71.0502802 10.654040  9.753966 11.554113 10.183601 11.124479
 [21,]  74.7371563 10.577549  9.732946 11.422152 10.136103 11.018995
 [22,]  78.4240323 10.497535  9.710499 11.284571 10.086177 10.908893
 [23,]  82.1109084 10.413997  9.660703 11.167291 10.020275 10.807719
 [24,]  85.7977845 10.324934  9.555234 11.094633  9.922637 10.727230
 [25,]  89.4846605 10.228566  9.411251 11.045881  9.801383 10.655750
 [26,]  93.1715366 10.124896  9.254802 10.994989  9.670126 10.579665
 [27,]  96.8584126 10.013921  9.101919 10.925923  9.537248 10.490594
 [28,] 100.5452887  9.895643  8.961074 10.830212  9.407174 10.384111
 [29,] 104.2321647  9.770061  8.835896 10.704225  9.281803 10.258318
 [30,] 107.9190408  9.637175  8.726521 10.547829  9.161206 10.113144
 [31,] 111.6059169  9.496986  8.629613 10.364358  9.043639  9.950333
 [32,] 115.2927929  9.349492  8.537054 10.161931  8.924858  9.774127
 [33,] 118.9796690  9.194696  8.433158  9.956233  8.796665  9.592726
 [34,] 122.6665450  9.032834  8.292119  9.773549  8.645687  9.419981
 [35,] 126.3534211  8.873374  8.106302  9.640447  8.472451  9.274298
 [36,] 130.0402972  8.721218  7.903906  9.538531  8.294036  9.148401
 [37,] 133.7271732  8.576366  7.707611  9.445122  8.122296  9.030436
 [38,] 137.4140493  8.438818  7.530924  9.346711  7.964292  8.913344
 [39,] 141.1009253  8.308573  7.380862  9.236284  7.823689  8.793457
 [40,] 144.7878014  8.185632  7.260270  9.110994  7.701975  8.669288
 [41,] 148.4746774  8.069994  7.168870  8.971118  7.599006  8.540982
 [42,] 152.1615535  7.961661  7.103155  8.820166  7.512948  8.410373
 [43,] 155.8484296  7.860630  7.055092  8.666169  7.439602  8.281659
 [44,] 159.5353056  7.766904  7.009561  8.524247  7.371066  8.162742
 [45,] 163.2221817  7.680481  6.941970  8.418992  7.294486  8.066477
 [46,] 166.9090577  7.601362  6.834744  8.367981  7.200676  8.002049
 [47,] 170.5959338  7.529547  6.710786  8.348308  7.101607  7.957487
 [48,] 174.2828099  7.465036  6.593441  8.336630  7.009482  7.920589
 [49,] 177.9696859  7.407828  6.496439  8.319216  6.931475  7.884180
 [50,] 181.6565620  7.357923  6.426818  8.289028  6.871265  7.844581
 [51,] 185.3434380  7.315323  6.387359  8.243286  6.830307  7.800339
 [52,] 189.0303141  7.280026  6.377645  8.182407  6.808381  7.751671
 [53,] 192.7171901  7.252033  6.393902  8.110164  6.803516  7.700550
 [54,] 196.4040662  7.231343  6.427574  8.035112  6.811240  7.651447
 [55,] 200.0909423  7.217958  6.462564  7.973351  6.823138  7.612777
 [56,] 203.7778183  7.211876  6.472901  7.950851  6.825638  7.598114
 [57,] 207.4646944  7.213097  6.444401  7.981794  6.811325  7.614870
 [58,] 211.1515704  7.221623  6.401425  8.041820  6.792932  7.650313
 [59,] 214.8384465  7.237452  6.365954  8.108949  6.781948  7.692955
 [60,] 218.5253226  7.260584  6.350882  8.170286  6.785113  7.736056
 [61,] 222.2121986  7.291021  6.362813  8.219228  6.805877  7.776164
 [62,] 225.8990747  7.328761  6.404305  8.253217  6.845578  7.811943
 [63,] 229.5859507  7.373805  6.474825  8.272784  6.903938  7.843671
 [64,] 233.2728268  7.426152  6.570556  8.281748  6.978960  7.873344
 [65,] 236.9597028  7.485803  6.683007  8.288599  7.066208  7.905398
 [66,] 240.6465789  7.552758  6.796401  8.309116  7.157435  7.948081
 [67,] 244.3334550  7.627017  6.885539  8.368494  7.239471  8.014563
 [68,] 248.0203310  7.708579  6.935042  8.482115  7.304277  8.112881
 [69,] 251.7072071  7.797445  6.969827  8.625062  7.364876  8.230013
 [70,] 255.3940831  7.893614  7.013061  8.774168  7.433378  8.353851
 [71,] 259.0809592  7.997088  7.078036  8.916140  7.516730  8.477446
 [72,] 262.7678353  8.107865  7.171365  9.044365  7.618387  8.597343
 [73,] 266.4547113  8.225946  7.295378  9.156513  7.739568  8.712323
 [74,] 270.1415874  8.351330  7.449058  9.253601  7.879742  8.822918
 [75,] 273.8284634  8.484018  7.627673  9.340363  8.036435  8.931601
 [76,] 277.5153395  8.624010  7.821047  9.426973  8.204328  9.043692
 [77,] 281.2022155  8.771305  8.010601  9.532009  8.373710  9.168900
 [78,] 284.8890916  8.925582  8.167863  9.683301  8.529547  9.321617
 [79,] 288.5759677  9.079270  8.278300  9.880240  8.660629  9.497911
 [80,] 292.2628437  9.229176  8.369331 10.089022  8.779764  9.678589
 [81,] 295.9497198  9.375302  8.463431 10.287174  8.898697  9.851908
 [82,] 299.6365958  9.517648  8.572525 10.462770  9.023663 10.011632
 [83,] 303.3234719  9.656212  8.701803 10.610621  9.157374 10.155050
 [84,] 307.0103479  9.790995  8.851902 10.730089  9.300162 10.281829
 [85,] 310.6972240  9.921998  9.019294 10.824702  9.450184 10.393812
 [86,] 314.3841001 10.049220  9.195061 10.903379  9.602779 10.495661
 [87,] 318.0709761 10.172661  9.362138 10.983183  9.749027 10.596294
 [88,] 321.7578522 10.292321  9.492944 11.091698  9.874513 10.710129
 [89,] 325.4447282 10.408175  9.554741 11.261609  9.962113 10.854237
 [90,] 329.1316043 10.518087  9.568813 11.467361 10.021933 11.014242
 [91,] 332.8184804 10.620696  9.593642 11.647749 10.083889 11.157503
 [92,] 336.5053564 10.716000  9.651644 11.780357 10.159696 11.272305
 [93,] 340.1922325 10.804002  9.747246 11.860757 10.251670 11.356333
 [94,] 343.8791085 10.884699  9.871663 11.897735 10.355218 11.414180
 [95,] 347.5659846 10.958093  9.999256 11.916930 10.456940 11.459245
 [96,] 351.2528606 11.024183 10.079566 11.968800 10.530463 11.517903
 [97,] 354.9397367 11.082969 10.044008 12.121930 10.539938 11.626000
 [98,] 358.6266128 11.134452  9.848608 12.420296 10.462383 11.806520
 [99,] 362.3134888 11.178631  9.497861 12.859400 10.300148 12.057114
[100,] 366.0003649 11.215506  9.014769 13.416242 10.065253 12.365759
> 
> co.o50.. <- cobs(day,speed, knots.add = TRUE, repeat.delete.add=TRUE,
+                  constraint = "periodic", nknots = 10,
+                  tau = .5, lambda = -1, method = "quantile")

 Searching for optimal lambda. This may take a while.
   While you are waiting, here is something you can consider
   to speed up the process:
       (a) Use a smaller number of knots;
       (b) Set lambda==0 to exclude the penalty term;
       (c) Use a coarser grid by reducing the argument
 	   'lambda.length' from the default value of 25.

   The algorithm has converged.  You might
   plot() the returned object (which plots 'sic' against 'lambda')
   to see if you have found the global minimum of the information criterion
   so that you can determine if you need to adjust any or all of
   'lambda.lo', 'lambda.hi' and 'lambda.length' and refit the model.

> 
> co.o9 <- ## Compute the .9 quantile smoothing B-spline
+     cobs(day,speed,knots.add = TRUE, constraint = "periodic", nknots = 10,
+          tau = .9,lambda = -1, method = "uniform")

 Searching for optimal lambda. This may take a while.
   While you are waiting, here is something you can consider
   to speed up the process:
       (a) Use a smaller number of knots;
       (b) Set lambda==0 to exclude the penalty term;
       (c) Use a coarser grid by reducing the argument
 	   'lambda.length' from the default value of 25.
WARNING: Some lambdas had problems in rq.fit.sfnc():
       lambda icyc ifl    fidel   sum|res|_s k
[1,] 757412.8   51  18 6063.884 0.0005253367 5

   The algorithm has converged.  You might
   plot() the returned object (which plots 'sic' against 'lambda')
   to see if you have found the global minimum of the information criterion
   so that you can determine if you need to adjust any or all of
   'lambda.lo', 'lambda.hi' and 'lambda.length' and refit the model.

Warning in cobs(day, speed, knots.add = TRUE, constraint = "periodic", nknots = 10,  :
  The algorithm has not converged after 100 iterations for at least one lambda
Check to make sure that your constraint is feasible
Warning message:
In cobs(day, speed, knots.add = TRUE, constraint = "periodic", nknots = 10,  :
  Check 'ifl'
> summary(co.o9)
COBS smoothing spline (degree = 2) from call:
	 cobs(x = day, y = speed, constraint = "periodic", nknots = 10,     method = "uniform", tau = 0.9, lambda = -1, knots.add = TRUE)
 * Warning in algorithm: some ifl != 1

{tau=0.9}-quantile;  dimensionality of fit: 12 from {13,12,10,9,7,5,14}
x$knots[1:10]:   0.999635,  41.555556,  82.111111, ... , 366.000365
lambda = 917.6266, selected via SIC, out of 25 ones.
coef[1:12]: 19.086315329, 19.279281013, 17.836625110, 18.717880961, 12.753410510, ... ,  0.004162160
empirical tau (over all): 5917/6574 = 0.9000608 (target tau= 0.9)
> (pc.9 <- predict(co.o9,interval = "both"))
                 z      fit    cb.lo    cb.up    ci.lo    ci.up
  [1,]   0.9996351 19.08632 15.04645 23.12618 17.35922 20.81341
  [2,]   4.6865112 19.11384 16.03130 22.19639 17.79602 20.43167
  [3,]   8.3733872 19.12626 16.75229 21.50023 18.11136 20.14116
  [4,]  12.0602633 19.12356 17.16708 21.08005 18.28714 19.95999
  [5,]  15.7471394 19.10576 17.28220 20.92931 18.32616 19.88535
  [6,]  19.4340154 19.07284 17.19773 20.94794 18.27120 19.87447
  [7,]  23.1208915 19.02480 17.04279 21.00681 18.17747 19.87214
  [8,]  26.8077675 18.96166 16.90458 21.01874 18.08223 19.84109
  [9,]  30.4946436 18.88340 16.82534 20.94147 18.00355 19.76325
 [10,]  34.1815196 18.79003 16.81742 20.76265 17.94672 19.63335
 [11,]  37.8683957 18.68155 16.86779 20.49532 17.90615 19.45696
 [12,]  41.5552718 18.55796 16.92597 20.18995 17.86026 19.25566
 [13,]  45.2421478 18.43641 16.88651 19.98631 17.77381 19.09901
 [14,]  48.9290239 18.33407 16.74724 19.92090 17.65568 19.01246
 [15,]  52.6158999 18.25093 16.57354 19.92832 17.53383 18.96804
 [16,]  56.3027760 18.18700 16.41651 19.95749 17.43009 18.94391
 [17,]  59.9896521 18.14228 16.30663 19.97792 17.35751 18.92704
 [18,]  63.6765281 18.11676 16.25933 19.97418 17.32268 18.91083
 [19,]  67.3634042 18.11044 16.28004 19.94084 17.32792 18.89296
 [20,]  71.0502802 18.12334 16.36608 19.88059 17.37208 18.87459
 [21,]  74.7371563 18.15543 16.50525 19.80562 17.44996 18.86091
 [22,]  78.4240323 18.20674 16.67083 19.74265 17.55012 18.86336
 [23,]  82.1109084 18.27725 16.81373 19.74077 17.65158 18.90292
 [24,]  85.7977845 18.32908 16.84171 19.81645 17.69321 18.96495
 [25,]  89.4846605 18.32433 16.74881 19.89986 17.65077 18.99789
 [26,]  93.1715366 18.26301 16.58588 19.94014 17.54601 18.98000
 [27,]  96.8584126 18.14511 16.38490 19.90531 17.39259 18.89762
 [28,] 100.5452887 17.97063 16.16307 19.77819 17.19787 18.74339
 [29,] 104.2321647 17.73958 15.92805 19.55110 16.96513 18.51403
 [30,] 107.9190408 17.45195 15.68075 19.22315 16.69474 18.20916
 [31,] 111.6059169 17.10774 15.41561 18.79987 16.38434 17.83115
 [32,] 115.2927929 16.70696 15.11848 18.29543 16.02786 17.38605
 [33,] 118.9796690 16.24960 14.76166 17.73753 15.61349 16.88571
 [34,] 122.6665450 15.73566 14.29830 17.17303 15.12117 16.35015
 [35,] 126.3534211 15.22172 13.74280 16.70065 14.58946 15.85398
 [36,] 130.0402972 14.76436 13.18983 16.33889 14.09123 15.43749
 [37,] 133.7271732 14.36358 12.68656 16.04059 13.64663 15.08052
 [38,] 137.4140493 14.01937 12.26161 15.77713 13.26790 14.77083
 [39,] 141.1009253 13.73173 11.93003 15.53343 12.96148 14.50198
 [40,] 144.7878014 13.50067 11.69826 15.30309 12.73012 14.27123
 [41,] 148.4746774 13.32619 11.56647 15.08592 12.57389 14.07850
 [42,] 152.1615535 13.20829 11.52859 14.88799 12.49020 13.92639
 [43,] 155.8484296 13.14696 11.57009 14.72383 12.47283 13.82109
 [44,] 159.5353056 13.14221 11.66313 14.62129 12.50989 13.77454
 [45,] 163.2221817 13.19404 11.76129 14.62679 12.58152 13.80656
 [46,] 166.9090577 13.26640 11.78868 14.74413 12.63466 13.89815
 [47,] 170.5959338 13.32327 11.74850 14.89804 12.65004 13.99651
 [48,] 174.2828099 13.36464 11.68722 15.04207 12.64752 14.08177
 [49,] 177.9696859 13.39052 11.63282 15.14822 12.63908 14.14196
 [50,] 181.6565620 13.40090 11.59997 15.20182 12.63098 14.17082
 [51,] 185.3434380 13.39578 11.59486 15.19670 12.62586 14.16569
 [52,] 189.0303141 13.37516 11.61748 15.13284 12.62373 14.12659
 [53,] 192.7171901 13.33905 11.66165 15.01645 12.62194 14.05616
 [54,] 196.4040662 13.28744 11.71269 14.86218 12.61421 13.96066
 [55,] 200.0909423 13.22033 11.74260 14.69805 12.58858 13.85208
 [56,] 203.7778183 13.13773 11.70493 14.57052 12.52519 13.75026
 [57,] 207.4646944 13.06204 11.58286 14.54123 12.42967 13.69442
 [58,] 211.1515704 13.01571 11.43870 14.59272 12.34152 13.68990
 [59,] 214.8384465 12.99871 11.31886 14.67857 12.28055 13.71687
 [60,] 218.5253226 13.01106 11.25120 14.77093 12.25870 13.76343
 [61,] 222.2121986 13.05276 11.25024 14.85528 12.28216 13.82336
 [62,] 225.8990747 13.12379 11.32202 14.92556 12.35351 13.89407
 [63,] 229.5859507 13.22417 11.46639 14.98196 12.47270 13.97565
 [64,] 233.2728268 13.35390 11.67689 15.03091 12.63695 14.07084
 [65,] 236.9597028 13.51297 11.93843 15.08750 12.83983 14.18610
 [66,] 240.6465789 13.70138 12.22235 15.18040 13.06908 14.33368
 [67,] 244.3334550 13.91913 12.48146 15.35680 13.30451 14.53376
 [68,] 248.0203310 14.14938 12.66087 15.63790 13.51303 14.78574
 [69,] 251.7072071 14.37529 12.78606 15.96452 13.69588 15.05471
 [70,] 255.3940831 14.59686 12.90393 16.28979 13.87311 15.32061
 [71,] 259.0809592 14.81408 13.04213 16.58602 14.05655 15.57161
 [72,] 262.7678353 15.02695 13.21483 16.83907 14.25225 15.80166
 [73,] 266.4547113 15.23548 13.42754 17.04342 14.46257 16.00840
 [74,] 270.1415874 15.43967 13.67930 17.20004 14.68709 16.19225
 [75,] 273.8284634 15.63951 13.96237 17.31665 14.92251 16.35651
 [76,] 277.5153395 15.83501 14.25941 17.41061 15.16142 16.50860
 [77,] 281.2022155 16.02616 14.53822 17.51411 15.39005 16.66228
 [78,] 284.8890916 16.21297 14.74771 17.67823 15.58655 16.83939
 [79,] 288.5759677 16.39609 14.85704 17.93515 15.73813 17.05406
 [80,] 292.2628437 16.57619 14.92203 18.23036 15.86901 17.28337
 [81,] 295.9497198 16.75326 14.99187 18.51466 16.00024 17.50628
 [82,] 299.6365958 16.92731 15.09323 18.76139 16.14322 17.71141
 [83,] 303.3234719 17.09833 15.23815 18.95852 16.30308 17.89358
 [84,] 307.0103479 17.26633 15.42911 19.10354 16.48090 18.05176
 [85,] 310.6972240 17.43130 15.66036 19.20224 16.67420 18.18840
 [86,] 314.3841001 17.59324 15.91584 19.27064 16.87613 18.31035
 [87,] 318.0709761 17.75216 16.16408 19.34025 17.07323 18.43109
 [88,] 321.7578522 17.90805 16.35268 19.46343 17.24311 18.57300
 [89,] 325.4447282 18.06092 16.41571 19.70613 17.35757 18.76427
 [90,] 329.1316043 18.20699 16.37328 20.04070 17.42306 18.99093
 [91,] 332.8184804 18.34249 16.34888 20.33610 17.49020 19.19478
 [92,] 336.5053564 18.46742 16.39240 20.54244 17.58032 19.35452
 [93,] 340.1922325 18.58178 16.51518 20.64838 17.69828 19.46528
 [94,] 343.8791085 18.68557 16.70157 20.66956 17.83738 19.53375
 [95,] 347.5659846 18.77878 16.90261 20.65495 17.97670 19.58087
 [96,] 351.2528606 18.86143 17.01973 20.70313 18.07408 19.64878
 [97,] 354.9397367 18.93351 16.91529 20.95173 18.07069 19.79633
 [98,] 358.6266128 18.99502 16.49758 21.49245 17.92733 20.06270
 [99,] 362.3134888 19.04596 15.77356 22.31835 17.64696 20.44495
[100,] 366.0003649 19.08632 14.78937 23.38328 17.24932 20.92333
> 
> co.o1 <- ## Compute the .1 quantile smoothing B-spline
+     cobs(day,speed,knots.add = TRUE, constraint = "periodic",nknots = nknots,
+          tau = .1,lambda = -1, method = "uniform")

 Searching for optimal lambda. This may take a while.
   While you are waiting, here is something you can consider
   to speed up the process:
       (a) Use a smaller number of knots;
       (b) Set lambda==0 to exclude the penalty term;
       (c) Use a coarser grid by reducing the argument
 	   'lambda.length' from the default value of 25.

   The algorithm has converged.  You might
   plot() the returned object (which plots 'sic' against 'lambda')
   to see if you have found the global minimum of the information criterion
   so that you can determine if you need to adjust any or all of
   'lambda.lo', 'lambda.hi' and 'lambda.length' and refit the model.

> summary(co.o1)
COBS smoothing spline (degree = 2) from call:
	 cobs(x = day, y = speed, constraint = "periodic", nknots = nknots,     method = "uniform", tau = 0.1, lambda = -1, knots.add = TRUE)
{tau=0.1}-quantile;  dimensionality of fit: 7 from {17,16,15,12,10,9,7,6,24}
x$knots[1:13]:   0.999635,  31.416667,  61.833333, ... , 366.000365
lambda = 101002.6, selected via SIC, out of 25 ones.
coef[1:15]: 4.8378305298, 4.9188085699, 4.8723731947, 4.6175513654, 4.1543428036, ... , 0.0002252407
empirical tau (over all): 657/6574 = 0.09993915 (target tau= 0.1)
> (pc.1 <- predict(co.o1, interval = "both"))
                 z      fit    cb.lo    cb.up    ci.lo    ci.up
  [1,]   0.9996351 4.837831 2.700018 6.975643 3.720466 5.955195
  [2,]   4.6865112 4.855931 3.363781 6.348080 4.076033 5.635828
  [3,]   8.3733872 4.870969 3.772944 5.968993 4.297067 5.444870
  [4,]  12.0602633 4.882945 3.904946 5.860945 4.371777 5.394114
  [5,]  15.7471394 4.891860 3.865270 5.918451 4.355295 5.428425
  [6,]  19.4340154 4.897713 3.802782 5.992645 4.325429 5.469998
  [7,]  23.1208915 4.900505 3.796625 6.004385 4.323543 5.477467
  [8,]  26.8077675 4.900235 3.867703 5.932766 4.360564 5.439905
  [9,]  30.4946436 4.896903 3.990870 5.802935 4.423349 5.370456
 [10,]  34.1815196 4.890509 4.058166 5.722852 4.455470 5.325547
 [11,]  37.8683957 4.881054 4.013596 5.748511 4.427662 5.334445
 [12,]  41.5552718 4.868536 3.932560 5.804513 4.379332 5.357741
 [13,]  45.2421478 4.852958 3.866525 5.839390 4.337382 5.368534
 [14,]  48.9290239 4.834317 3.838293 5.830341 4.313728 5.354906
 [15,]  52.6158999 4.812615 3.853064 5.772165 4.311089 5.314140
 [16,]  56.3027760 4.787851 3.901421 5.674281 4.324543 5.251159
 [17,]  59.9896521 4.760025 3.952024 5.568027 4.337709 5.182341
 [18,]  63.6765281 4.729138 3.939530 5.518746 4.316436 5.141840
 [19,]  67.3634042 4.695189 3.848375 5.542003 4.252587 5.137791
 [20,]  71.0502802 4.658178 3.740172 5.576184 4.178367 5.137990
 [21,]  74.7371563 4.618106 3.652621 5.583590 4.113479 5.122733
 [22,]  78.4240323 4.574971 3.601376 5.548566 4.066105 5.083838
 [23,]  82.1109084 4.528776 3.588991 5.468560 4.037581 5.019970
 [24,]  85.7977845 4.479518 3.606520 5.352516 4.023231 4.935805
 [25,]  89.4846605 4.427199 3.627523 5.226874 4.009235 4.845163
 [26,]  93.1715366 4.371860 3.597076 5.146645 3.966906 4.776815
 [27,]  96.8584126 4.314441 3.486766 5.142116 3.881842 4.747039
 [28,] 100.5452887 4.255324 3.353996 5.156652 3.784229 4.726419
 [29,] 104.2321647 4.194510 3.239461 5.149560 3.695337 4.693683
 [30,] 107.9190408 4.131999 3.160735 5.103263 3.624351 4.639647
 [31,] 111.6059169 4.067791 3.121976 5.013606 3.573445 4.562137
 [32,] 115.2927929 4.001885 3.116694 4.887077 3.539225 4.464546
 [33,] 118.9796690 3.934283 3.123418 4.745147 3.510470 4.358095
 [34,] 122.6665450 3.864983 3.095004 4.634961 3.462540 4.267425
 [35,] 126.3534211 3.796365 2.986608 4.606121 3.373131 4.219598
 [36,] 130.0402972 3.730809 2.847121 4.614496 3.268934 4.192683
 [37,] 133.7271732 3.668314 2.723841 4.612788 3.174669 4.161959
 [38,] 137.4140493 3.608881 2.638453 4.579310 3.101670 4.116092
 [39,] 141.1009253 3.552510 2.597662 4.507359 3.053442 4.051578
 [40,] 144.7878014 3.499201 2.597619 4.400782 3.027974 3.970428
 [41,] 148.4746774 3.448953 2.621330 4.276576 3.016382 3.881525
 [42,] 152.1615535 3.401767 2.629088 4.174447 2.997913 3.805622
 [43,] 155.8484296 3.357643 2.563729 4.151558 2.942690 3.772596
 [44,] 159.5353056 3.316581 2.451452 4.181710 2.864406 3.768755
 [45,] 163.2221817 3.278580 2.346582 4.210578 2.791455 3.765705
 [46,] 166.9090577 3.243641 2.275981 4.211301 2.737877 3.749405
 [47,] 170.5959338 3.211763 2.249337 4.174190 2.708735 3.714792
 [48,] 174.2828099 3.182948 2.265378 4.100517 2.703364 3.662531
 [49,] 177.9696859 3.157194 2.311015 4.003372 2.714924 3.599463
 [50,] 181.6565620 3.134501 2.353349 3.915654 2.726219 3.542784
 [51,] 185.3434380 3.114871 2.333717 3.896025 2.706587 3.523155
 [52,] 189.0303141 3.098302 2.252120 3.944484 2.656031 3.540574
 [53,] 192.7171901 3.084795 2.167222 4.002368 2.605210 3.564380
 [54,] 196.4040662 3.074350 2.111920 4.036779 2.571319 3.577380
 [55,] 200.0909423 3.066966 2.099305 4.034627 2.561201 3.572731
 [56,] 203.7778183 3.062644 2.130646 3.994642 2.575519 3.549769
 [57,] 207.4646944 3.061384 2.196255 3.926512 2.609209 3.513558
 [58,] 211.1515704 3.063185 2.269269 3.857101 2.648231 3.478139
 [59,] 214.8384465 3.068048 2.295359 3.840737 2.664189 3.471908
 [60,] 218.5253226 3.075973 2.248333 3.903613 2.643393 3.508553
 [61,] 222.2121986 3.086960 2.185359 3.988561 2.615722 3.558197
 [62,] 225.8990747 3.101008 2.146142 4.055873 2.601931 3.600085
 [63,] 229.5859507 3.118118 2.147678 4.088557 2.610901 3.625335
 [64,] 233.2728268 3.138289 2.193812 4.082767 2.644642 3.631937
 [65,] 236.9597028 3.161523 2.277835 4.045211 2.699648 3.623397
 [66,] 240.6465789 3.187818 2.378054 3.997582 2.764581 3.611055
 [67,] 244.3334550 3.217175 2.447156 3.987193 2.814711 3.619638
 [68,] 248.0203310 3.249593 2.438644 4.060542 2.825737 3.673450
 [69,] 251.7072071 3.285073 2.399777 4.170370 2.822358 3.747789
 [70,] 255.3940831 3.323615 2.377703 4.269528 2.829218 3.818013
 [71,] 259.0809592 3.365219 2.393886 4.336552 2.857535 3.872903
 [72,] 262.7678353 3.409884 2.454804 4.364965 2.910695 3.909074
 [73,] 266.4547113 3.457611 2.556281 4.358942 2.986516 3.928707
 [74,] 270.1415874 3.508400 2.680704 4.336096 3.075791 3.941010
 [75,] 273.8284634 3.562251 2.787309 4.337193 3.157214 3.967288
 [76,] 277.5153395 3.618779 2.818698 4.418860 3.200603 4.036955
 [77,] 281.2022155 3.677047 2.803500 4.550594 3.220473 4.133622
 [78,] 284.8890916 3.737013 2.796686 4.677340 3.245535 4.228491
 [79,] 288.5759677 3.798675 2.824667 4.772683 3.289593 4.307757
 [80,] 292.2628437 3.862035 2.896338 4.827732 3.357297 4.366773
 [81,] 295.9497198 3.927092 3.009055 4.845130 3.447264 4.406920
 [82,] 299.6365958 3.993847 3.146979 4.840714 3.551217 4.436476
 [83,] 303.3234719 4.062298 3.272073 4.852523 3.649274 4.475323
 [84,] 307.0103479 4.131852 3.321950 4.941754 3.708543 4.555161
 [85,] 310.6972240 4.198939 3.309726 5.088152 3.734176 4.663701
 [86,] 314.3841001 4.262964 3.300584 5.225343 3.759960 4.765968
 [87,] 318.0709761 4.323927 3.325733 5.322121 3.802204 4.845650
 [88,] 321.7578522 4.381829 3.394304 5.369353 3.865682 4.897975
 [89,] 325.4447282 4.436668 3.500560 5.372777 3.947395 4.925942
 [90,] 329.1316043 4.488447 3.620586 5.356307 4.034845 4.942049
 [91,] 332.8184804 4.537163 3.700988 5.373338 4.100122 4.974204
 [92,] 336.5053564 4.582818 3.665559 5.500076 4.103397 5.062239
 [93,] 340.1922325 4.625411 3.578003 5.672819 4.077965 5.172857
 [94,] 343.8791085 4.664942 3.549212 5.780672 4.081787 5.248098
 [95,] 347.5659846 4.701412 3.601750 5.801074 4.126655 5.276169
 [96,] 351.2528606 4.734820 3.708217 5.761422 4.198248 5.271391
 [97,] 354.9397367 4.765166 3.774425 5.755907 4.247338 5.282994
 [98,] 358.6266128 4.792451 3.637426 5.947475 4.188757 5.396144
 [99,] 362.3134888 4.816673 3.206572 6.426774 3.975126 5.658220
[100,] 366.0003649 4.837834 2.519067 7.156602 3.625891 6.049778
> 
> par(mfrow = c(1,2), mgp = c(1.5, .6,0), mar = .1 + c(3,3,1,1))
> plot(day,speed, pch = 3, cex=0.6,  xlab = "DAYS", ylab = "SPEED (knots)")
> lines(pc.5, lwd = 2.5, col = 2)
> lines(pc.9, lwd = 2., col = "blue")
> lines(pc.1, lwd = 2., col = "blue")
> plot(day,speed,type = "n",xlab = "DAYS", ylab = "SPEED (knots)")
> lines(pc.5, lwd = 1.5)
> lines(pc.9, col = 3)
> lines(pc.1, col = 3)
> abline(v = co.o50.$knots, lty = 3, col = "gray70")
> ## rather rug(co.o5$knots, lty = 2)
> 
